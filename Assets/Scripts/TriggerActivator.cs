using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.Events;


 
public class TriggerActivator : MonoBehaviour,IResetable
{
   
    [SerializeField] UnityEvent ontriggerEnterEvent;

    [SerializeField] UnityEvent ontriggerExitEvent;


    [SerializeField] string colliderToCeck = "player";



    void Start()
    {
        ResetEvent.instance.AddCallBackTarget(this);
    }


    private void OnTriggerEnter(Collider other) {
        
        if(!other.CompareTag(colliderToCeck)) return;
        ontriggerEnterEvent?.Invoke();


    }

    private void OnTriggerExit(Collider other) {

        if(!other.CompareTag(colliderToCeck)) return;

         ontriggerExitEvent?.Invoke();   



        
    }


    public void DestroyTrigger(float time)
    {
        Destroy(this.GameObject(),time);
    }

    public void DeactivateTrigger()
    {
        this.GetComponent<Collider>().enabled = false;
    }
    public void  RemoveListeners() //call this if only run once or just disable..
    {
        ontriggerEnterEvent.RemoveAllListeners();
        ontriggerExitEvent.RemoveAllListeners();

    }

    public void ResetState(int checkpoint = 0)
    {
        Debug.Log("State reset");
        this.GetComponent<Collider>().enabled = true;
    }
}
