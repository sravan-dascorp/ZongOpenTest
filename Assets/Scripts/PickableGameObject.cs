
using UnityEngine;

public class PickableGameObject : MonoBehaviour,IInteractable //Ipickables //todo:separe into specific types:
{
    
   [SerializeField] Items_SO item;

    ActionRequest actionRequest = ActionRequest.itemPickUP;
    [SerializeField] string actionDescription;
    [SerializeField] Transform itemPosition;
    public string pickableObjectName { get => item.name; }
    
    [SerializeField] GameObject onFocusedDisplay;
    public bool DisableIfActionsEmpty =>  true;

    public void AddItem(Items_SO item)
    {
        
    }

    public bool CheckItemAcceptable(Items_SO item)
    {
        return false;
    }

    public string GetActionRequestDiscription()
    {
        return "pick up " + item.ItemName;
    }

    public ActionRequest GetActionRequestType()
    {
        return actionRequest;
    }

    public Items_SO GetItem()
    {
        actionRequest = ActionRequest.empty;
        return this.item;
    }

    public Vector3 GetPosition()
    {
        return itemPosition.position;
    }


    public void Disable()
    {
       Destroy(this.gameObject);
    }

    public void OnFocused()
    {
        CancelInvoke(nameof(disableOnfocus));
        onFocusedDisplay.SetActive(true); //>>todo : make prefab and make it geenric

        Invoke(nameof(disableOnfocus),2f);
    }


    void disableOnfocus()=> onFocusedDisplay.SetActive(false);

    public void Execute()
    {
        throw new System.NotImplementedException();
    }
}
