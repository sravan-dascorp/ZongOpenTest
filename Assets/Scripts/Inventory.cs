using System;

using System.Collections.Generic;
using UnityEngine;
using System.Linq;


public class Inventory : MonoBehaviour
{

    // List<Items_SO> Weapons = new List<Items_SO>();

    // List<Items_SO> Instruments = new List<Items_SO>();

    Dictionary<ItemType, List<Items_SO>> inventoryItems = new Dictionary<ItemType,  List<Items_SO>>();


    public event Action<Items_SO> OnOnItemAdded;
    public event Action<Items_SO> OnOnItemRemoved;

    PlayerActions playerActionsController ;

    [SerializeField]List<Items_SO> initialItems = new List<Items_SO>();

  
    void Start()
    {
        
       
        playerActionsController = this.GetComponent<PlayerActions>();
        foreach (ItemType itemType in Enum.GetValues(typeof(ItemType)))
        {
            inventoryItems.Add(itemType, new List<Items_SO>());
        }

        foreach (var item in initialItems)
        {
            AddItem(item);
        }
       
    }

   
    public void AddItem(Items_SO item)
    {
        if (inventoryItems[item.ItemType].Any((x) => x.ItemID == item.ItemID))
        {
            //cant add//or if multiple of same ID support =>has to implement that
            UIManager.Instance.ShowDevMessage("You already hasve this item.Multiple item of same id not implemented ..  :(");
            Debug.Log("You already haveThis item");
        }
        else
        {
          
            inventoryItems[item.ItemType].Add(item);
            foreach(var i in inventoryItems[item.ItemType]) Debug.Log(i.ItemID);
            UIManager.Instance.AddItemToInventoryUI(item);
            OnOnItemAdded?.Invoke(item);



        }

   
    }

    /// <summary>
    /// Update is called every frame, if the MonoBehaviour is enabled.
    /// </summary>
   
    public void RemoveItem(Items_SO item)
    {
        if (inventoryItems[item.ItemType].RemoveAll((x) => x.ItemID == item.ItemID) > 0) //well its kind of 
        {
            UIManager.Instance.RemoveFromInventoryUI(item);
            OnOnItemRemoved?.Invoke(item);
        }
        else
        {
            Debug.LogError("Tryin to remove stuff not in list !!!..This is not supposed to happen");
        }
    }




    void OnEnable()
    {
        UIManager.Instance.OnItemSelectedFromUI += ProcessItemSelectedFromUI;
    }

    private void ProcessItemSelectedFromUI(ItemType itemType, int itemID)
    {   
       
        Debug.Log(itemType);
        
        Items_SO  itemSelected = inventoryItems[itemType].Find(x=>x.ItemID == itemID); //inventoryItems[itemType].Find(x=>x.ItemID == itemID);
        Debug.Log(itemSelected.ItemID);
        if(itemSelected != null) playerActionsController.OnItemSelected(itemSelected);
        else
        {
            UIManager.Instance.ShowDevMessage("An error!!,item not in inventory!");
            Debug.LogError("Not Supposed To HAppen,stuff in ui doesnt exit in inventory");
        } 
    }   

    private void OnDisable()
    {
        UIManager.Instance.OnItemSelectedFromUI -= ProcessItemSelectedFromUI;

    }


}



